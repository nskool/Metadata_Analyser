/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.chanakya.metanalyser;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javazoom.jl.decoder.JavaLayerException;
import org.jaudiotagger.audio.AudioFile;
import org.jaudiotagger.audio.AudioFileIO;
import org.jaudiotagger.audio.AudioHeader;
import org.jaudiotagger.audio.exceptions.CannotReadException;
import org.jaudiotagger.audio.exceptions.InvalidAudioFrameException;
import org.jaudiotagger.audio.exceptions.ReadOnlyFileException;
import org.jaudiotagger.audio.mp3.MP3AudioHeader;
import org.jaudiotagger.audio.mp3.MP3File;
import org.jaudiotagger.tag.FieldKey;
import org.jaudiotagger.tag.Tag;
import org.jaudiotagger.tag.TagException;
import org.jaudiotagger.tag.id3.ID3v1Tag;
import org.jaudiotagger.tag.id3.ID3v24Frames;
import org.jaudiotagger.tag.id3.ID3v24Tag;
//Media import
import javazoom.jl.player.*;
/**
 *
 * @author nikhil
 */
public class Analyser extends javax.swing.JFrame {
    
    private JFileChooser chooser;
    private String mediaFolderLocation;
    private File[] list_files;
    private String playAudio;
    private Player playMP3;
    private Thread thread;

    	static Tag tag;static MP3File f;static MP3AudioHeader ah;
    /**
     * Creates new form Analyser
     * 
     */
    public Analyser() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        but_folder_location = new javax.swing.JButton();
        tf_folder_location = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        media_list = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTA_song_info = new javax.swing.JTextArea();
        but_play = new javax.swing.JButton();
        but_stop = new javax.swing.JButton();
        but_exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Metanalysis");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Media Folder Location"));

        but_folder_location.setText("Browse");
        but_folder_location.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_folder_locationActionPerformed(evt);
            }
        });

        tf_folder_location.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tf_folder_location.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_folder_locationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(tf_folder_location, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(but_folder_location)
                .addGap(34, 34, 34))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(but_folder_location)
                    .addComponent(tf_folder_location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Information"));

        jScrollPane1.setViewportView(media_list);

        jTA_song_info.setColumns(20);
        jTA_song_info.setRows(5);
        jScrollPane2.setViewportView(jTA_song_info);

        but_play.setText("Play");
        but_play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_playActionPerformed(evt);
            }
        });

        but_stop.setText("Stop");
        but_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_stopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(but_play)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(but_stop)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(but_play)
                    .addComponent(but_stop))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        but_exit.setText("Exit");
        but_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(but_exit)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(but_exit)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Dashboard", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tf_folder_locationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_folder_locationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_folder_locationActionPerformed

    private void but_folder_locationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_folder_locationActionPerformed
        // TODO add your handling code here:
        chooser=new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("Choose Media Folder");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) { 
                tf_folder_location.setText(mediaFolderLocation=chooser.getSelectedFile().toString());
                tf_folder_location.setEditable(false);
                but_folder_location.setEnabled(false);
                processFolder(mediaFolderLocation);
                }
              else {
                System.out.println("No Selection ");
      }
        
    }//GEN-LAST:event_but_folder_locationActionPerformed

    private void but_playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_playActionPerformed
        // TODO add your handling code here:
        
        thread=new Thread(){
          @Override
          public void run(){
                       try{
                FileInputStream fis = new FileInputStream(playAudio);
                playMP3 = new Player(fis);
                playMP3.play();
                }catch(FileNotFoundException | JavaLayerException e){
                System.out.println(e);
            }   
          }  
        };
        thread.start();

    }//GEN-LAST:event_but_playActionPerformed

    private void but_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_stopActionPerformed
        // TODO add your handling code here:
        playMP3.close();
        try {
            thread.join();
        } catch (InterruptedException ex) {
            Logger.getLogger(Analyser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_but_stopActionPerformed

    private void but_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_exitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_but_exitActionPerformed

    public void processFolder(String folder_path){
        File folder=new File(folder_path);
        list_files=folder.listFiles();    
        DefaultListModel listModel=new DefaultListModel();
        for(int i=0;i<list_files.length;i++){
        listModel.addElement(list_files[i].getName());
        }

        media_list.setModel(listModel);
        media_list.setVisible(true);
        //Add MouseListener to media_list
        media_list.addMouseListener(mouseListener);
        
        
        for(int i=0;i<list_files.length;i++){
           if(list_files[i].isFile()){
               //System.out.println("File: "+list_files[i].getName());
               String song_name=list_files[i].getName();
               File temp=new File(folder_path+"/"+song_name);
		
		try{
			f=(MP3File)AudioFileIO.read(temp);
			//tag=f.getTag();
                        ID3v24Tag v2Tag = f.getID3v2TagAsv24();
                        
			ah =(MP3AudioHeader) f.getAudioHeader();
                        
                        if(f.hasID3v2Tag()){
                            System.out.println(v2Tag.getFirst(ID3v24Frames.FRAME_ID_ARTIST));
                        }
		}catch(CannotReadException | IOException | TagException | ReadOnlyFileException | InvalidAudioFrameException e){
			System.out.println("Exception: "+e);
		}
               
           } else if(list_files[i].isDirectory()){
               System.out.println("Directory: "+list_files[i].getName());
           }
        }
    }
    /**
     * @param args the command line arguments
     */
    
    MouseListener mouseListener=new MouseAdapter() {
        public void mouseClicked(MouseEvent mouseEvent){
            JList mList=(JList)mouseEvent.getSource();
            if(mouseEvent.getClickCount()==1){
                int index=mList.locationToIndex(mouseEvent.getPoint());
                if(index>=0){
                    Object temp=mList.getModel().getElementAt(index);
                    String temp_string=mediaFolderLocation+"/"+temp.toString();
                    playAudio=temp_string;
                    File temp_file=new File(temp_string);
                    	try{
			f=(MP3File)AudioFileIO.read(temp_file);
			//tag=f.getTag();
                        ID3v24Tag v2Tag = f.getID3v2TagAsv24();

                        
			ah =(MP3AudioHeader) f.getAudioHeader();
                        
                        if(f.hasID3v2Tag()){
                            jTA_song_info.setText("****Song Information***");
                            jTA_song_info.append("\n");
                            jTA_song_info.append("\nTitle: "+v2Tag.getFirst(ID3v24Frames.FRAME_ID_TITLE));
                            jTA_song_info.append("\nArtist: "+v2Tag.getFirst(ID3v24Frames.FRAME_ID_ARTIST));
                            jTA_song_info.append("\nAlbum: "+v2Tag.getFirst(ID3v24Frames.FRAME_ID_ALBUM));
                            jTA_song_info.append("\nYear: "+v2Tag.getFirst(ID3v24Frames.FRAME_ID_YEAR));
                            
                        }else{
                            jTA_song_info.setText("****Song Information***");
                            jTA_song_info.append("\n");
                            jTA_song_info.append("\nTitle: "+v2Tag.getFirst(ID3v24Frames.FRAME_ID_TITLE));
                            jTA_song_info.append("\nArtist: "+v2Tag.getFirst(ID3v24Frames.FRAME_ID_ARTIST));
                            jTA_song_info.append("\nAlbum: "+v2Tag.getFirst(ID3v24Frames.FRAME_ID_ALBUM));
                            jTA_song_info.append("\nYear: "+v2Tag.getFirst(ID3v24Frames.FRAME_ID_YEAR));
                            
                        }
		}catch(CannotReadException | IOException | TagException | ReadOnlyFileException | InvalidAudioFrameException e){
			System.out.println("Exception: "+e);
		}
                }
            }
        }
};
    

    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Analyser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Analyser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Analyser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Analyser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Analyser().setVisible(true);
            }
        });
    }

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but_exit;
    private javax.swing.JButton but_folder_location;
    private javax.swing.JButton but_play;
    private javax.swing.JButton but_stop;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTA_song_info;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JList media_list;
    private javax.swing.JTextField tf_folder_location;
    // End of variables declaration//GEN-END:variables
}
